"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jaccard_1 = __importDefault(require("./jaccard"));
var Dice = /** @class */ (function (_super) {
    __extends(Dice, _super);
    function Dice(name) {
        if (name === void 0) { name = 'Dice'; }
        return _super.call(this, name) || this;
    }
    Dice.prototype.similarity = function (source, target, costs) {
        if (costs === void 0) { costs = {}; }
        if (source.length === 0 && target.length === 0)
            return 1;
        var j = _super.prototype.similarity.call(this, source, target, costs);
        return (2 * j) / (1 + j);
    };
    Dice.prototype.distance = function (source, target, costs) {
        if (costs === void 0) { costs = {}; }
        return 1 - this.similarity(source, target, costs);
    };
    return Dice;
}(jaccard_1.default));
exports.default = Dice;
